/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author hp
 */
public class FrequencyDistributionTable extends javax.swing.JFrame {

    /**
     * Creates new form FrequencyDistributionTable
     */
    public FrequencyDistributionTable() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        input = new javax.swing.JTextField();
        tableButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        input.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        tableButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        tableButton.setText("Create Frequency Distribution Table");
        tableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableButtonActionPerformed(evt);
            }
        });

        output.setColumns(20);
        output.setFont(new java.awt.Font("Monospaced", 3, 14)); // NOI18N
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Enter Raw Data Seperated by , e.g (10,46,19..)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(input)
                        .addComponent(jScrollPane1)
                        .addComponent(tableButton, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tableButton)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void tableButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
          List<Double> rawData=new ArrayList<>();
            
           rawData.clear();
            
            String inp = input.getText();
         
            String[] numbers = inp.replace(",", " ").split("\\s+");
            
           
            for (String num : numbers) {
                if (!num.isEmpty()) {  
                    rawData.add(Double.parseDouble(num));
                }
            }


            Collections.sort(rawData);

            int k = (int) Math.ceil(1 + 3.322 * Math.log10(rawData.size()));
            double range = rawData.get(rawData.size()-1) - rawData.get(0);
            double width = range/k;
    
            int prev=0; 
            int totalCf=0;
            String result = "\tClass Interval\t   Frequency\tMid Point\tCF\tRF\n\n";
    
            double lower = rawData.get(0);

            for (int i = 0; i < k; i++) {
                double upper = lower + width;
                if (i==(k-1)) {
                    upper++;
                }
                String interval = String.format("%.2f -- %.2f", lower, upper);
    
                int count = 0;
                for (double value : rawData) {
                    
                    if (value >= lower && value < upper ) {
                        count++;                       
                    }
                   
                }
                             
                
                double midPoint = (lower + upper)/2;
                double relativeFreq = (double)count/rawData.size();
                totalCf+=(prev+count);               
                result += String.format("\t%s   \t%d       %.2f   \t%d   \t%.2f\n\n", interval, count, (midPoint),(prev+count),(relativeFreq));
                prev=prev+count;
                lower = upper;
            }

         
            result+="\t______________________________________________________________\n\t  Total\t\t\t"+rawData.size()+"\t\t\t"+totalCf;
            output.setText(result);

    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrequencyDistributionTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrequencyDistributionTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrequencyDistributionTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrequencyDistributionTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrequencyDistributionTable().setVisible(true);
            }
        });
        }
        
    // Variables declaration - do not modify                     
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    private javax.swing.JButton tableButton;
    // End of variables declaration                   
}
